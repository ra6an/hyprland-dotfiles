layout: Split(
    direction: Vertical,
    panes: [
        (
            size: "8",
            pane: Split(
                direction: Horizontal,
                panes: [
                    (
                        size: "21",
                        pane: Pane(AlbumArt),
                    ),
                    (
                        size: "100%",
                        pane: Split(
                            direction: Vertical,
                            panes: [
                                (
                                    size: "5",
                                    pane: Pane(Header),
                                ),
                                (
                                    size: "1",
                                    pane: Pane(ProgressBar),
                                ),
                                (
                                    size: "3",
                                    pane: Pane(Tabs),
                                ),
                            ]
                        )
                    ),
                ]
            ),
        ),
        (
            size: "100%",
            pane: Pane(TabContent),
        ),
    ],
    cava: (

    // symbols that will be used to draw the bar in the visualiser, in ascending order of

    // fill fraction

    bar_symbols: ['▁', '▂', '▃', '▄', '▅', '▆', '▇', '█'],


    bg_color: "black", // background color, defaults to rmpc's bg color if not provided

    bar_width: 1, // width of a single bar in columns

    bar_spacing: 1, // free space between bars in columns


    // Colors can be configured in three different ways: a single color, different colors

    // per row and a gradient. You can use the same colors as everywhere else. Only specify

    // one of these:


    // Every bar symbol will be red

    bar_color: Single("red"),


    // The first two rows(two lowest amplitudes) will be red, after that two green rows

    // and the rest will be blue. You can have as many as you want here. The last value

    // will be used if the height exceeds the length of this array.

    bar_color: Rows([

        "red",

        "red",

        "green",

        "green",

        "blue",

    ])


    // A simple color gradient. This is a map where keys are percent values of the height

    // where the color starts. After that it is linearly interpolated towards the next value.

    // In this example, the color will start at green for the lowest amplitudes, go towards

    // blue at half amplitudes and finishing as red for the highest values. Keys must be between

    // 0 and 100 and if the first or last key are not 0 and 100 respectively, the lowest and highest

    // value will be used as 0 and 100. Only hex and RGB colors are supported here and your terminal

    // must support them as well!

    bar_color: Gradient({

          0: "rgb(  0, 255,   0)",

         50: "rgb(  0,   0, 255)",

        100: "rgb(255,   0,   0)",

    })

),
),